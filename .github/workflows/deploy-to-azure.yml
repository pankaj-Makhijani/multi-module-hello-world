name: Deploy to Azure Container Apps

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code with commit history
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2  # Fetch the last two commits for change detection

      # Step 2: Set Commit ID for Tagging
      - name: Set Commit ID as Tag
        run: echo "COMMIT_ID=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV

      # Step 3: Check which services changed
      - name: Check changed files
        id: changes
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q '^service-hello/'; then
            echo "HELLO_CHANGED=true" >> $GITHUB_ENV
          fi
          if git diff --name-only HEAD^ HEAD | grep -q '^service-world/'; then
            echo "WORLD_CHANGED=true" >> $GITHUB_ENV
          fi

      # Step 4: Login to Azure
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 5: Install Azure CLI containerapp extension
      - name: Install Azure CLI containerapp extension
        run: |
          az extension add --name containerapp --upgrade

      # Step 6: Login to Azure Container Registry (if any service changed)
      - name: Login to Azure Container Registry
        if: env.HELLO_CHANGED == 'true' || env.WORLD_CHANGED == 'true'
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login ${{ secrets.ACR_NAME }}.azurecr.io -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      # Build and deploy the hello service
      - name: Build and deploy Hello Container App
        uses: azure/container-apps-deploy-action@v0
        if: env.HELLO_CHANGED == 'true'
        with:          
          appSourcePath: ${{ github.workspace }}   
          acrName: ${{ secrets.ACR_NAME }}
          acrUsername: ${{ secrets.DOCKER_USERNAME }}
          acrPassword: ${{ secrets.DOCKER_PASSWORD }}
          containerAppName: ${{ secrets.CONTAINER_APP_ENVIRONMENT_1 }}
          containerAppEnvironment: managedEnvironment-azureblog-8ede
          resourceGroup: ${{ secrets.RESOURCE_GROUP }}
          imageToBuild: ${{ secrets.ACR_NAME }}.azurecr.io/${{ secrets.CONTAINER_REGISTRY_1 }}:${{ env.COMMIT_ID }}
          dockerfilePath: ./service-hello/Dockerfile

      # Build and deploy the world service
      - name: Build and deploy World Container App
        uses: azure/container-apps-deploy-action@v0
        if: env.WORLD_CHANGED == 'true'
        with:          
          appSourcePath: ${{ github.workspace }}   
          acrName: ${{ secrets.ACR_NAME }}
          acrUsername: ${{ secrets.DOCKER_USERNAME }}
          acrPassword: ${{ secrets.DOCKER_PASSWORD }}
          containerAppName: ${{ secrets.CONTAINER_APP_ENVIRONMENT_2 }}
          containerAppEnvironment: managedEnvironment-azureblog-8ede
          resourceGroup: ${{ secrets.RESOURCE_GROUP }}
          imageToBuild: ${{ secrets.ACR_NAME }}.azurecr.io/${{ secrets.CONTAINER_REGISTRY_2 }}:${{ env.COMMIT_ID }}
          dockerfilePath: ./service-world/Dockerfile
